{"index": {"_type": "blogpost", "_id": "1", "_index": "demos"}}
{"title":"Solr For WordPress on GitHub","teaser":"I put Solr For WordPress on GitHub. This is the latest code for 0.3.0.","author":"Matt Weber","date": "2011-03-29"}
{"index": {"_type": "blogpost", "_id": "2", "_index": "demos"}}
{"title":"Solr for WordPress 0.2.0 Released","teaser":"I just released Solr for WordPress 0.2.0. This release completely replaces the default WordPress search without any special setup. I have also added i18n support so people can translate it into different languages, integrated it into the default WordPress theme, and added support to enable or disable specific facets.","author":"Matt Weber","date": "2009-05-13"}
{"index": {"_type": "blogpost", "_id": "3", "_index": "demos"}}
{"title":"Solr AutoSuggest with TermsComponent and jQuery","teaser":"I needed to implement an autosuggest/autocomplete search box for use with Solr. After a little research, I found the new TermsComponent feature in Solr 1.4. To use TermsComponent for suggestions, you need to provide set the prefix and lower bound to the input term and make the lower bound exclusive.","author":"Matt Weber","date": "2009-05-02"}
{"index": {"_type": "blogpost", "_id": "4", "_index": "demos"}}
{"title":"Pypes: The Topological Scheduler","teaser":"Pypes provides a simple and robust scheduling algorithm. Each component is derived from a stackless tasklet which is an extremely lightweight thread of execution often referred to as a microthread. Components are then chained together in dependency order allowing the output of one component to be pyped as input to another.","author":"Eric Gaumer","date": "2009-09-27"}
{"index": {"_type": "blogpost", "_id": "5", "_index": "demos"}}
{"title":"Flow-Based Programming with Pypes","teaser":"I finally had a chance to launch a beta release of pypes this week. Pypes is a framework for designing data flow applications using flow-based programming techniques. It originated from the necessity to process huge amounts of data prior to indexing. It was inspired by a wide range of concepts which resulted in it being a hybrid of several different techniques and/or architectural styles.","author":"Eric Gaumer","date": "2009-08-16"}
{"index": {"_type": "blogpost", "_id": "6", "_index": "demos"}}
{"title":"Boolean Retrieval: What You''re Not Being Told","teaser":"Despite the wide-scale criticism by many researchers, boolean retrieval models continue to dominate the commercial search space. The long recognized limitations and inadequacies of boolean retrieval models seem to have had no discernible effect on the industry.","author":"Eric Gaumer","date": "2009-05-03"}
{"index": {"_type": "blogpost", "_id": "7", "_index": "demos"}}
{"title":"PyPy is the Future of Python","teaser":"Currently the most common implementation of Python is known as CPython, and its the version of Python you get at python.org, probably 99.9% of Python developers are using it. However, I think over the next couple of years we\''re going to see a move away from this towards PyPy, Python written in Python.","author":"Alex Gaynor","date": "2010-05-15"}
{"index": {"_type": "blogpost", "_id": "8", "_index": "demos"}}
{"title":"An Inside Look at the GIL Removal Patch of Lore","teaser":"As most Python programmers know, people love to hate the Global Interpreter Lock (GIL). Why can''t it simply be removed? What''s the problem? However, if you''ve been around the Python community long enough, you might also know that the GIL was already removed once before--specifically, by Greg Stein who created a patch against Python 1.4 in 1996.","author":"Dave Beazley","date": "2011-09-12"}
{"index": {"_type": "blogpost", "_id": "9", "_index": "demos"}}
{"title":"Training Part of Speech Taggers with NLTK Trainer","teaser":"NLTK trainer makes it easy to train part-of-speech taggers with various algorithms using train_tagger.py. The fastest algorithms are the sequential backoff taggers. You can specify the backoff sequence using the --sequential argument, which accepts any combination of the following letters.","author":"Jacob Perkins","date": "2011-03-29"}
{"index": {"_type": "blogpost", "_id": "10", "_index": "demos"}}
{"title":"Consistent Hashing","teaser":"I''ve bumped into consistent hashing a couple of times lately. The paper that introduced the idea (Consistent Hashing and Random Trees: Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web by David Karger et al) appeared ten years ago, although recently it seems the idea has quietly been finding its way into more and more services, from Amazon''s Dynamo to memcached (courtesy of Last.fm). So what is consistent hashing and why should you care?","author":"Tom White","date": "2007-11-27"}

